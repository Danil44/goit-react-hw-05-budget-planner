{"version":3,"sources":["components/Form.js","components/Label.js","components/Input.js","components/Button.js","components/BudgetForm/BudgetForm.js","redux/BudgetForm/budgetActions.js","components/BudgetForm/BudgetFormContainer.js","components/ExpenseForm/ExpenseForm.js","redux/Expenses/expensesActions.js","components/ExpenseForm/ExpenseFormContainer.js","components/ExpenseTable/ExpensesTable.js","redux/Expenses/expensesSelectors.js","components/ExpenseTable/ExpensesTableContainer.js","components/Values/Stat.js","components/Values/Values.js","redux/Values/ValuesSelectors.js","components/Values/ValuesContainer.js","components/App.js","redux/Expenses/expensesReducers.js","redux/BudgetForm/budgetReducers.js","redux/store.js","index.js"],"names":["StyledForm","styled","form","_templateObject","Form","_ref","_ref$onSubmit","onSubmit","children","react_default","a","createElement","StyledLabel","label","Label_templateObject","props","customStyles","Label","StyledInput","input","Input_templateObject","Input","_ref$type","type","_ref$value","value","_ref$onChange","onChange","_ref$name","name","_ref$placeholder","placeholder","StyledButton","button","Button_templateObject","Button","_ref$label","_ref$onClick","onClick","defaultProps","BudgetForm","state","budget","handleChange","e","_this","setState","target","handleSubmit","preventDefault","onSave","Number","components_Form","this","components_Label","components_Input","components_Button","Component","Type","connect","dispatch","payload","ExpenseForm","amount","Object","defineProperty","id","shortid","generate","expense","Table","table","ExpensesTable_templateObject","ExpensesTable","_ref$items","items","onRemove","map","_ref2","key","getItemsFromState","expenses","removeExpense","Container","div","Stat_templateObject","isPositive","p","_templateObject2","Value","_templateObject3","Stat","_ref$isPositive","Stat_Label","section","Values_templateObject","Values","balance","Values_Container","Values_Stat","getBudget","countExpenses","createSelector","reduce","total","item","countBalance","App_templateObject","App","App_Container","BudgetFormContainer","ValuesContainer","ExpenseFormContainer","ExpensesTableContainer","expensesReducer","arguments","length","undefined","concat","toConsumableArray","filter","budgetReducer","rootReducer","combineReducers","ExpensesReducers","budgetReducers","middleware","applyMiddleware","ReduxThunk","logger","store","createStore","composeWithDevTools","ReactDOM","render","es","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.2532019b.chunk.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nconst StyledForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  padding: 16px;\n  width: 100%;\n  border-radius: 2px;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n`;\n\nconst Form = ({ onSubmit = () => null, children }) => (\n  <StyledForm onSubmit={onSubmit}>{children}</StyledForm>\n);\n\nForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]).isRequired,\n};\n\nexport default Form;\n","import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nconst StyledLabel = styled.label`\n  display: inline-block;\n  font-size: 20px;\n  color: #171718;\n  cursor: pointer;\n  ${props => props.customStyles}\n`;\n\nconst Label = ({ children, customStyles }) => (\n  <StyledLabel customStyles={customStyles}>{children}</StyledLabel>\n);\n\nLabel.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]).isRequired,\n  customStyles: PropTypes.string.isRequired,\n};\n\nexport default Label;\n","import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nconst StyledInput = styled.input`\n  color: #171718;\n  font: inherit;\n  font-size: 1.2rem;\n  padding: 16px;\n  border-radius: 4px;\n  border: 1px solid #bdbdbd;\n  width: 100%;\n  outline: 0;\n\n  &:focus {\n    border: 1px solid #2b32b2;\n  }\n`;\n\nconst Input = ({\n  type = 'text',\n  value = null,\n  onChange = () => null,\n  name = '',\n  placeholder = '',\n}) => (\n  <StyledInput\n    placeholder={placeholder}\n    type={type}\n    value={value}\n    onChange={onChange}\n    name={name}\n  />\n);\n\nInput.propTypes = {\n  type: PropTypes.string.isRequired,\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  onChange: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n  placeholder: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n    .isRequired,\n};\n\nexport default Input;\n","import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nconst StyledButton = styled.button`\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  color: #fff;\n  background-color: #3f51b5;\n  border: 0;\n  outline: 0;\n  padding: 8px 24px;\n  border-radius: 4px;\n  cursor: pointer;\n  box-shadow: 0px 2px 1px 1px rgba(0, 0, 0, 0.05);\n  font: inherit;\n  text-transform: uppercase;\n  user-select: none;\n\n  transition: background-color 200ms ease-in-out;\n\n  &:hover {\n    box-shadow: 0px 2px 1px 1px rgba(0, 0, 0, 0.15);\n    background-color: #303f9f;\n  }\n`;\n\nconst Button = ({ type = 'button', label = '', onClick = () => null }) => (\n  <StyledButton type={type} onClick={onClick}>\n    {label}\n  </StyledButton>\n);\n\nButton.defaultProps = {\n  onClick: null,\n};\n\nButton.propTypes = {\n  type: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  onClick: PropTypes.func,\n};\n\nexport default Button;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Form from '../Form';\nimport Label from '../Label';\nimport Input from '../Input';\nimport Button from '../Button';\n\nconst labelStyles = `\n  margin-bottom: 16px;  \n`;\n\nexport default class BudgetForm extends Component {\n  state = { budget: '' };\n\n  static propTypes = {\n    onSave: PropTypes.func.isRequired,\n  };\n\n  handleChange = e => {\n    this.setState({\n      budget: e.target.value,\n    });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    this.props.onSave(Number(this.state.budget));\n\n    this.setState({ budget: '' });\n  };\n\n  render() {\n    return (\n      <Form onSubmit={this.handleSubmit}>\n        <Label customStyles={labelStyles}>\n          Enter your total budget\n          <Input\n            type=\"number\"\n            value={this.state.budget}\n            onChange={this.handleChange}\n            placeholder={0}\n            name=\"budget\"\n          />\n        </Label>\n\n        <Button label=\"Save\" type=\"submit\" />\n      </Form>\n    );\n  }\n}\n","export const Type = {\n  ADD_BUDGET: 'ADD_BUDGET',\n};\n\nexport const addBudget = budget => ({\n  type: Type.ADD_BUDGET,\n  payload: { budget },\n});\n","import { connect } from 'react-redux';\nimport BudgetForm from './BudgetForm';\nimport * as budgetActions from '../../redux/BudgetForm/budgetActions';\n\nconst mapDispatchToProps = dispatch => ({\n  onSave: form => dispatch(budgetActions.addBudget(form)),\n});\n\nexport default connect(\n  null,\n  mapDispatchToProps,\n)(BudgetForm);\n","import React, { Component } from 'react';\nimport shortid from 'shortid';\nimport PropTypes from 'prop-types';\nimport Form from '../Form';\nimport Label from '../Label';\nimport Input from '../Input';\nimport Button from '../Button';\n\nconst labelStyles = `\n  margin-bottom: 16px;  \n`;\n\nexport default class ExpenseForm extends Component {\n  state = {\n    name: '',\n    amount: '',\n  };\n\n  static propTypes = {\n    onSave: PropTypes.func.isRequired,\n  };\n\n  handleChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    this.props.onSave({\n      id: shortid.generate(),\n      amount: Number(this.state.amount),\n      name: this.state.name,\n    });\n\n    this.setState({ name: '', amount: '' });\n  };\n\n  render() {\n    return (\n      <Form onSubmit={this.handleSubmit}>\n        <Label customStyles={labelStyles}>\n          Enter expense name\n          <Input\n            type=\"text\"\n            name=\"name\"\n            value={this.state.name}\n            onChange={this.handleChange}\n          />\n        </Label>\n        <Label customStyles={labelStyles}>\n          Enter expense amount\n          <Input\n            type=\"number\"\n            name=\"amount\"\n            placeholder={0}\n            value={this.state.amount}\n            onChange={this.handleChange}\n          />\n        </Label>\n\n        <Button label=\"Add\" type=\"submit\" />\n      </Form>\n    );\n  }\n}\n","export const Type = {\n  ADD_EXPENSE: 'ADD_EXPENSE',\n  REMOVE_EXPENSE: 'REMOVE_EXPENSE',\n};\n\nexport const addExpense = expense => ({\n  type: Type.ADD_EXPENSE,\n  payload: { expense },\n});\n\nexport const removeExpense = id => ({\n  type: Type.REMOVE_EXPENSE,\n  payload: { id },\n});\n","import { connect } from 'react-redux';\nimport ExpenseForm from './ExpenseForm';\nimport * as expensesActions from '../../redux/Expenses/expensesActions';\n\nconst mapDispatchToProps = dispatch => ({\n  onSave: form => dispatch(expensesActions.addExpense(form)),\n});\n\nexport default connect(\n  null,\n  mapDispatchToProps,\n)(ExpenseForm);\n","import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport Button from '../Button';\n\nconst Table = styled.table`\n  border-collapse: collapse;\n  text-align: center;\n  width: 100%;\n\n  tr {\n    border-bottom: 1px solid #212121;\n  }\n\n  td,\n  th {\n    padding-top: 8px;\n    padding-bottom: 8px;\n  }\n`;\n\nconst ExpensesTable = ({ items = [], onRemove }) => (\n  <Table>\n    <thead>\n      <tr>\n        <th>Expense name</th>\n        <th>Expense amount</th>\n        <th />\n      </tr>\n    </thead>\n    <tbody>\n      {items.map(({ id, name, amount }) => (\n        <tr key={id}>\n          <td>{name}</td>\n          <td>{amount}</td>\n          <td>\n            <Button type=\"button\" label=\"Delete\" onClick={() => onRemove(id)} />\n          </td>\n        </tr>\n      ))}\n    </tbody>\n  </Table>\n);\n\nExpensesTable.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      amount: PropTypes.number.isRequired,\n    }).isRequired,\n  ).isRequired,\n\n  onRemove: PropTypes.func.isRequired,\n};\n\nexport default ExpensesTable;\n","/* eslint-disable import/prefer-default-export */\nexport const getItemsFromState = state => state.expenses;\n","import { connect } from 'react-redux';\nimport ExpensesTable from './ExpensesTable';\nimport { getItemsFromState } from '../../redux/Expenses/expensesSelectors';\nimport { removeExpense } from '../../redux/Expenses/expensesActions';\n\nconst mapStateToProps = state => ({\n  items: getItemsFromState(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onRemove: id => dispatch(removeExpense(id)),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(ExpensesTable);\n","/* eslint-disable react/prop-types */\nimport React from 'react';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  text-align: center;\n  padding: 8px 24px;\n  color: ${props => (props.isPositive ? '#388E3C' : '#D32F2F')};\n  user-select: none;\n`;\n\nconst Label = styled.p`\n  margin-top: 0;\n  margin-bottom: 8px;\n  text-transform: uppercase;\n  font-weight: 500;\n  font-size: 24px;\n`;\n\nconst Value = styled.p`\n  margin-top: 0;\n  margin-bottom: 0;\n  font-size: 48px;\n`;\n\nconst Stat = ({ label = '', value = 0, isPositive = 0 }) => (\n  <Container isPositive={isPositive}>\n    <Label>{label}</Label>\n    <Value>{value}&nbsp;&#x24;</Value>\n  </Container>\n);\n\nexport default Stat;\n","import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport Stat from './Stat';\n\nconst Container = styled.section`\n  display: inline-flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst Values = ({ budget, expenses, balance }) => (\n  <Container>\n    <Stat label=\"Budget\" value={budget} isPositive />\n    <Stat label=\"Expenses\" value={expenses} />\n    <Stat label=\"Balance\" value={balance} isPositive={balance >= 0} />\n  </Container>\n);\n\nValues.propTypes = {\n  budget: PropTypes.number.isRequired,\n  expenses: PropTypes.number.isRequired,\n  balance: PropTypes.number.isRequired,\n};\n\nexport default Values;\n","import { createSelector } from 'reselect';\n\nexport const getBudget = state => state.budget;\n\nexport const getExpenses = state => state.expenses;\n\nexport const countExpenses = createSelector(\n  [getExpenses],\n  expenses => expenses.reduce((total, item) => total + item.amount, 0),\n);\n\nexport const countBalance = state => {\n  const budget = getBudget(state);\n  const expenses = countExpenses(state);\n\n  return budget - expenses;\n};\n","import { connect } from 'react-redux';\nimport Values from './Values';\nimport {\n  getBudget,\n  countExpenses,\n  countBalance,\n} from '../../redux/Values/ValuesSelectors';\n\nconst mapStateToProps = state => ({\n  budget: getBudget(state),\n  expenses: countExpenses(state),\n  balance: countBalance(state),\n});\n\nexport default connect(mapStateToProps)(Values);\n","import React from 'react';\nimport styled from 'styled-components';\nimport BudgetForm from './BudgetForm/BudgetFormContainer';\nimport ExpenseForm from './ExpenseForm/ExpenseFormContainer';\nimport ExpensesTable from './ExpenseTable/ExpensesTableContainer';\nimport Values from './Values/ValuesContainer';\n\nconst Container = styled.div`\n  display: grid;\n  grid-template-columns: 400px 1fr;\n  align-items: flex-start;\n  grid-gap: 24px;\n  width: 1000px;\n  padding-left: 16px;\n  padding-right: 16px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nconst App = () => {\n  return (\n    <Container>\n      <BudgetForm />\n      <Values />\n      <ExpenseForm />\n      <ExpensesTable />\n    </Container>\n  );\n};\n\nexport default App;\n","import { Type } from './expensesActions';\n\nconst expensesReducer = (state = [], { type, payload }) => {\n  switch (type) {\n    case Type.ADD_EXPENSE:\n      return [...state, payload.expense];\n\n    case Type.REMOVE_EXPENSE:\n      return state.filter(item => item.id !== payload.id);\n\n    default:\n      return state;\n  }\n};\n\nexport default expensesReducer;\n","import { Type } from './budgetActions';\n\nconst budgetReducer = (state = 0, { type, payload }) => {\n  switch (type) {\n    case Type.ADD_BUDGET:\n      return payload.budget;\n\n    default:\n      return state;\n  }\n};\n\nexport default budgetReducer;\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport logger from 'redux-logger';\nimport ReduxThunk from 'redux-thunk';\nimport ExpensesReducers from './Expenses/expensesReducers';\nimport budgetReducers from './BudgetForm/budgetReducers';\n\nconst rootReducer = combineReducers({\n  expenses: ExpensesReducers,\n  budget: budgetReducers,\n});\n\nconst middleware = applyMiddleware(ReduxThunk, logger);\n\nconst store = createStore(rootReducer, composeWithDevTools(middleware));\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './components/App';\nimport store from './redux/store';\n\nimport './styles.css';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}